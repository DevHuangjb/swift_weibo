//
//  BrowserController.swift
//  SwiftWB
//
//  Created by huangjinbiao on 17/2/28.
//  Copyright © 2017年 huangjinbiao. All rights reserved.
//

import UIKit
import SDWebImage

class BrowserController: UIViewController {
    
    var picArray:[URL] = []
    var index : Int = 0
    
    class BrowserLayout: UICollectionViewFlowLayout {
        override func prepare() {
            itemSize = kScreenBounds.size
            minimumLineSpacing = 0
            minimumInteritemSpacing = 0
            collectionView?.isPagingEnabled = true
            scrollDirection = UICollectionViewScrollDirection.horizontal
            collectionView?.bounces = false
            collectionView?.showsVerticalScrollIndicator = false
            collectionView?.showsHorizontalScrollIndicator = false
        }
    }
    
    var collectionView :UICollectionView = {
        let clect = UICollectionView(frame: CGRect.zero, collectionViewLayout: BrowserLayout())
        clect.register(BrowserCell.classForCoder(), forCellWithReuseIdentifier: "BrowserCell")
        return clect
    }()
    

    override func viewDidLoad() {
        super.viewDidLoad()
        view.backgroundColor = UIColor.white
        view.addSubview(collectionView)
//        collectionView.delegate = self
        collectionView.dataSource = self
        collectionView.frame = kScreenBounds
    }
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        dismiss(animated: true, completion: nil)
    }

}

extension BrowserController:UICollectionViewDataSource{
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return picArray.count
    }
    
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "BrowserCell", for: indexPath) as! BrowserCell
        cell.imageURL = picArray[indexPath.item]
        return cell
        
    }
}



class BrowserCell: UICollectionViewCell {
    override init(frame: CGRect) {
        super.init(frame: frame)
        setupUI()
    }
    
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    var imageURL: URL?
        {
        didSet
        {
//            imageView.sd_setImage(with: imageURL)
            // 设置图片
            
            imageView.sd_setImage(with: imageURL!) { (image, erroe, _, url) in
                
                let width = kScreenW
                let height = kScreenH
                
                // 1.计算当前图片的宽高比
                let scale = image!.size.height / image!.size.width
                // 2.利用宽高比乘以屏幕宽度, 等比缩放图片
                let imageHeight = scale * width
                // 3.设置图片frame
                self.imageView.frame = CGRect(origin: CGPoint.zero, size: CGSize(width: width, height: imageHeight))
                
                // 4.判断当前是长图还是短图
                if imageHeight < height
                {
                    // 短图
                    // 4.计算顶部和底部内边距
                    let offsetY = (height - imageHeight) * 0.5
                    
                    // 5.设置内边距
                    self.scrollview.contentInset = UIEdgeInsets(top: offsetY, left: 0, bottom: offsetY, right: 0)
                }else
                {
                    self.scrollview.contentSize = CGSize(width: width, height: imageHeight)
                }
            }
        }
    }
    
    // MARK: - 内部控制方法
    private func setupUI()
    {
        // 1.添加子控件
//        contentView.addSubview(scrollview)
        contentView.addSubview(imageView)
        
        // 2.布局子控件
        scrollview.frame = self.frame
        imageView.backgroundColor  = RandomColor()
        scrollview.backgroundColor = UIColor.darkGray
    }
    
    // MARK: - 懒加载
    private lazy var scrollview: UIScrollView = UIScrollView()
    private lazy  var imageView: UIImageView = UIImageView()
}
